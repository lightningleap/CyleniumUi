/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as dashboardGeneralUserDashBoardRouteImport } from './routes/(dashboard)/generalUserDashBoard'
import { Route as dashboardAdminDashboardRouteImport } from './routes/(dashboard)/adminDashboard'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authMfaRouteImport } from './routes/(auth)/mfa'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgotPassword'
import { Route as dashboardorganisationOrganizationsRouteImport } from './routes/(dashboard)/(organisation)/organizations'
import { Route as dashboardorganisationOrganisationProfileRouteImport } from './routes/(dashboard)/(organisation)/organisationProfile'
import { Route as dashboardorganisationOrganisationDashboardRouteImport } from './routes/(dashboard)/(organisation)/organisationDashboard'
import { Route as dashboardorganisationOrganisationDashboardNewRouteImport } from './routes/(dashboard)/(organisation)/organisationDashboard/new'
import { Route as dashboardorganisationOrganisationDashboardIdRouteImport } from './routes/(dashboard)/(organisation)/organisationDashboard/$id'
import { Route as dashboardorganisationOrganisationIdRouteImport } from './routes/(dashboard)/(organisation)/organisation/$id'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardGeneralUserDashBoardRoute =
  dashboardGeneralUserDashBoardRouteImport.update({
    id: '/(dashboard)/generalUserDashBoard',
    path: '/generalUserDashBoard',
    getParentRoute: () => rootRouteImport,
  } as any)
const dashboardAdminDashboardRoute = dashboardAdminDashboardRouteImport.update({
  id: '/(dashboard)/adminDashboard',
  path: '/adminDashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authMfaRoute = authMfaRouteImport.update({
  id: '/(auth)/mfa',
  path: '/mfa',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgotPassword',
  path: '/forgotPassword',
  getParentRoute: () => rootRouteImport,
} as any)
const dashboardorganisationOrganizationsRoute =
  dashboardorganisationOrganizationsRouteImport.update({
    id: '/(dashboard)/(organisation)/organizations',
    path: '/organizations',
    getParentRoute: () => rootRouteImport,
  } as any)
const dashboardorganisationOrganisationProfileRoute =
  dashboardorganisationOrganisationProfileRouteImport.update({
    id: '/(dashboard)/(organisation)/organisationProfile',
    path: '/organisationProfile',
    getParentRoute: () => rootRouteImport,
  } as any)
const dashboardorganisationOrganisationDashboardRoute =
  dashboardorganisationOrganisationDashboardRouteImport.update({
    id: '/(dashboard)/(organisation)/organisationDashboard',
    path: '/organisationDashboard',
    getParentRoute: () => rootRouteImport,
  } as any)
const dashboardorganisationOrganisationDashboardNewRoute =
  dashboardorganisationOrganisationDashboardNewRouteImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => dashboardorganisationOrganisationDashboardRoute,
  } as any)
const dashboardorganisationOrganisationDashboardIdRoute =
  dashboardorganisationOrganisationDashboardIdRouteImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => dashboardorganisationOrganisationDashboardRoute,
  } as any)
const dashboardorganisationOrganisationIdRoute =
  dashboardorganisationOrganisationIdRouteImport.update({
    id: '/(dashboard)/(organisation)/organisation/$id',
    path: '/organisation/$id',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/forgotPassword': typeof authForgotPasswordRoute
  '/mfa': typeof authMfaRoute
  '/sign-in': typeof authSignInRoute
  '/adminDashboard': typeof dashboardAdminDashboardRoute
  '/generalUserDashBoard': typeof dashboardGeneralUserDashBoardRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/organisationDashboard': typeof dashboardorganisationOrganisationDashboardRouteWithChildren
  '/organisationProfile': typeof dashboardorganisationOrganisationProfileRoute
  '/organizations': typeof dashboardorganisationOrganizationsRoute
  '/organisation/$id': typeof dashboardorganisationOrganisationIdRoute
  '/organisationDashboard/$id': typeof dashboardorganisationOrganisationDashboardIdRoute
  '/organisationDashboard/new': typeof dashboardorganisationOrganisationDashboardNewRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/forgotPassword': typeof authForgotPasswordRoute
  '/mfa': typeof authMfaRoute
  '/sign-in': typeof authSignInRoute
  '/adminDashboard': typeof dashboardAdminDashboardRoute
  '/generalUserDashBoard': typeof dashboardGeneralUserDashBoardRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/organisationDashboard': typeof dashboardorganisationOrganisationDashboardRouteWithChildren
  '/organisationProfile': typeof dashboardorganisationOrganisationProfileRoute
  '/organizations': typeof dashboardorganisationOrganizationsRoute
  '/organisation/$id': typeof dashboardorganisationOrganisationIdRoute
  '/organisationDashboard/$id': typeof dashboardorganisationOrganisationDashboardIdRoute
  '/organisationDashboard/new': typeof dashboardorganisationOrganisationDashboardNewRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/(auth)/forgotPassword': typeof authForgotPasswordRoute
  '/(auth)/mfa': typeof authMfaRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(dashboard)/adminDashboard': typeof dashboardAdminDashboardRoute
  '/(dashboard)/generalUserDashBoard': typeof dashboardGeneralUserDashBoardRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/(dashboard)/(organisation)/organisationDashboard': typeof dashboardorganisationOrganisationDashboardRouteWithChildren
  '/(dashboard)/(organisation)/organisationProfile': typeof dashboardorganisationOrganisationProfileRoute
  '/(dashboard)/(organisation)/organizations': typeof dashboardorganisationOrganizationsRoute
  '/(dashboard)/(organisation)/organisation/$id': typeof dashboardorganisationOrganisationIdRoute
  '/(dashboard)/(organisation)/organisationDashboard/$id': typeof dashboardorganisationOrganisationDashboardIdRoute
  '/(dashboard)/(organisation)/organisationDashboard/new': typeof dashboardorganisationOrganisationDashboardNewRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/forgotPassword'
    | '/mfa'
    | '/sign-in'
    | '/adminDashboard'
    | '/generalUserDashBoard'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/organisationDashboard'
    | '/organisationProfile'
    | '/organizations'
    | '/organisation/$id'
    | '/organisationDashboard/$id'
    | '/organisationDashboard/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/forgotPassword'
    | '/mfa'
    | '/sign-in'
    | '/adminDashboard'
    | '/generalUserDashBoard'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/organisationDashboard'
    | '/organisationProfile'
    | '/organizations'
    | '/organisation/$id'
    | '/organisationDashboard/$id'
    | '/organisationDashboard/new'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/(auth)/forgotPassword'
    | '/(auth)/mfa'
    | '/(auth)/sign-in'
    | '/(dashboard)/adminDashboard'
    | '/(dashboard)/generalUserDashBoard'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/(dashboard)/(organisation)/organisationDashboard'
    | '/(dashboard)/(organisation)/organisationProfile'
    | '/(dashboard)/(organisation)/organizations'
    | '/(dashboard)/(organisation)/organisation/$id'
    | '/(dashboard)/(organisation)/organisationDashboard/$id'
    | '/(dashboard)/(organisation)/organisationDashboard/new'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authMfaRoute: typeof authMfaRoute
  authSignInRoute: typeof authSignInRoute
  dashboardAdminDashboardRoute: typeof dashboardAdminDashboardRoute
  dashboardGeneralUserDashBoardRoute: typeof dashboardGeneralUserDashBoardRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  dashboardorganisationOrganisationDashboardRoute: typeof dashboardorganisationOrganisationDashboardRouteWithChildren
  dashboardorganisationOrganisationProfileRoute: typeof dashboardorganisationOrganisationProfileRoute
  dashboardorganisationOrganizationsRoute: typeof dashboardorganisationOrganizationsRoute
  dashboardorganisationOrganisationIdRoute: typeof dashboardorganisationOrganisationIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/generalUserDashBoard': {
      id: '/(dashboard)/generalUserDashBoard'
      path: '/generalUserDashBoard'
      fullPath: '/generalUserDashBoard'
      preLoaderRoute: typeof dashboardGeneralUserDashBoardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/adminDashboard': {
      id: '/(dashboard)/adminDashboard'
      path: '/adminDashboard'
      fullPath: '/adminDashboard'
      preLoaderRoute: typeof dashboardAdminDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/mfa': {
      id: '/(auth)/mfa'
      path: '/mfa'
      fullPath: '/mfa'
      preLoaderRoute: typeof authMfaRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgotPassword': {
      id: '/(auth)/forgotPassword'
      path: '/forgotPassword'
      fullPath: '/forgotPassword'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/(organisation)/organizations': {
      id: '/(dashboard)/(organisation)/organizations'
      path: '/organizations'
      fullPath: '/organizations'
      preLoaderRoute: typeof dashboardorganisationOrganizationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/(organisation)/organisationProfile': {
      id: '/(dashboard)/(organisation)/organisationProfile'
      path: '/organisationProfile'
      fullPath: '/organisationProfile'
      preLoaderRoute: typeof dashboardorganisationOrganisationProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/(organisation)/organisationDashboard': {
      id: '/(dashboard)/(organisation)/organisationDashboard'
      path: '/organisationDashboard'
      fullPath: '/organisationDashboard'
      preLoaderRoute: typeof dashboardorganisationOrganisationDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(dashboard)/(organisation)/organisationDashboard/new': {
      id: '/(dashboard)/(organisation)/organisationDashboard/new'
      path: '/new'
      fullPath: '/organisationDashboard/new'
      preLoaderRoute: typeof dashboardorganisationOrganisationDashboardNewRouteImport
      parentRoute: typeof dashboardorganisationOrganisationDashboardRoute
    }
    '/(dashboard)/(organisation)/organisationDashboard/$id': {
      id: '/(dashboard)/(organisation)/organisationDashboard/$id'
      path: '/$id'
      fullPath: '/organisationDashboard/$id'
      preLoaderRoute: typeof dashboardorganisationOrganisationDashboardIdRouteImport
      parentRoute: typeof dashboardorganisationOrganisationDashboardRoute
    }
    '/(dashboard)/(organisation)/organisation/$id': {
      id: '/(dashboard)/(organisation)/organisation/$id'
      path: '/organisation/$id'
      fullPath: '/organisation/$id'
      preLoaderRoute: typeof dashboardorganisationOrganisationIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface dashboardorganisationOrganisationDashboardRouteChildren {
  dashboardorganisationOrganisationDashboardIdRoute: typeof dashboardorganisationOrganisationDashboardIdRoute
  dashboardorganisationOrganisationDashboardNewRoute: typeof dashboardorganisationOrganisationDashboardNewRoute
}

const dashboardorganisationOrganisationDashboardRouteChildren: dashboardorganisationOrganisationDashboardRouteChildren =
  {
    dashboardorganisationOrganisationDashboardIdRoute:
      dashboardorganisationOrganisationDashboardIdRoute,
    dashboardorganisationOrganisationDashboardNewRoute:
      dashboardorganisationOrganisationDashboardNewRoute,
  }

const dashboardorganisationOrganisationDashboardRouteWithChildren =
  dashboardorganisationOrganisationDashboardRoute._addFileChildren(
    dashboardorganisationOrganisationDashboardRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authMfaRoute: authMfaRoute,
  authSignInRoute: authSignInRoute,
  dashboardAdminDashboardRoute: dashboardAdminDashboardRoute,
  dashboardGeneralUserDashBoardRoute: dashboardGeneralUserDashBoardRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  dashboardorganisationOrganisationDashboardRoute:
    dashboardorganisationOrganisationDashboardRouteWithChildren,
  dashboardorganisationOrganisationProfileRoute:
    dashboardorganisationOrganisationProfileRoute,
  dashboardorganisationOrganizationsRoute:
    dashboardorganisationOrganizationsRoute,
  dashboardorganisationOrganisationIdRoute:
    dashboardorganisationOrganisationIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
